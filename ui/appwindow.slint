import { Button, VerticalBox, LineEdit } from "std-widgets.slint";

export component AppWindow inherits Window {

    in property <string> results: "";
    in-out property <bool> opencurtains;
    callback calculate(string);

    background: #313e50;
    GridLayout {
        padding: 50px;
        spacing: 25px;

        Row {
            Text {
                text: "Income:";
                horizontal-alignment: center;
                font-size: 24px;
                font-weight: 900;
                color: white;
            }
        }

        Row {
            income := LineEdit {
                placeholder-text: "Your digits...";
                horizontal-alignment: center;
                font-size: 16px;
                height: 35px;
            }
        }

        Row {
            Button {
                text: "Calculate";
                primary: true;
                height: 35px;
                clicked => {
                    root.opencurtains = !root.opencurtains;
                    calculate(income.text);
                }
            }
        }

        Row {
            VerticalBox {
                Text {
                    color: white;
                    font-size: 18px;
                    font-weight: 900;
                    text: "Calculated Allowances";
                }

                Rectangle {
                    height: 120px;
                    background: #f2f2f2;

                    Text {
                        color: black;
                        font-size: 16px;
                        font-weight: 500;
                        text: root.results;
                    }

                    Rectangle {
                        background: #333333;
                        x: 0;
                        width: opencurtains ? 0px : parent.width / 2;
                        height: parent.height;
                        animate width {
                            duration: 250ms;
                            easing: ease-in;
                        }
                    }

                    Rectangle {
                        background: #333333;
                        x: opencurtains ? parent.width : parent.width / 2;
                        width: opencurtains ? 0px : parent.width / 2;
                        height: parent.height;
                        animate width {
                            duration: 250ms;
                            easing: ease-in;
                        }
                        animate x {
                            duration: 250ms;
                            easing: ease-in;
                        }
                    }
                }
            }
        }
    }
}
